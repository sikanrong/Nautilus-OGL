AC_PREREQ(2.54)

dnl ===========================================================================

m4_define(glib_minver,                 2.19.0)
m4_define(gnome_desktop_minver,        2.25.5)
m4_define(pango_minver,                1.1.2)
m4_define(gtk_minver,                  2.16.0)
m4_define(xml_minver,                  2.4.7)
m4_define(exif_minver,                 0.5.12)
m4_define(beagle_minver,               0.2.4)
m4_define(tracker_minver,              0.0.1)
m4_define(exempi_minver,               1.99.2)
m4_define(exempi_minver_newapi,        1.99.5)
m4_define(gail_minver,                 0.16)


dnl 1. If the library code has changed at all since last release, then increment revision.
dnl 2. If any interfaces have been added, then increment current and set revision to 0.
dnl Interface break is not allowed.
m4_define(nautilus_extension_current,  2)
m4_define(nautilus_extension_revision, 0)

AC_INIT([nautilus],[2.27.2],
	[http://bugzilla.gnome.org/enter_bug.cgi?product=nautilus])

dnl ===========================================================================

AC_CONFIG_SRCDIR(src)
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE([1.9 tar-ustar])
AM_MAINTAINER_MODE
AC_SUBST([ACLOCAL_AMFLAGS], ["\${ACLOCAL_FLAGS}"])

AC_SUBST(GLIB_REQUIRED, [glib_minver])
AC_SUBST(GNOME_DESKTOP_REQUIRED, [gnome_desktop_minver])
AC_SUBST(PANGO_REQUIRED, [pango_minver])
AC_SUBST(GTK_REQUIRED, [gtk_minver])
AC_SUBST(XML_REQUIRED, [xml_minver])
AC_SUBST(GAIL_REQUIRED)

dnl We need to decrement current by one in the calculation of the age because
dnl the library was started with version "1:0:0" instead of "0:0:0"
AC_SUBST(NAUTILUS_EXTENSION_VERSION_INFO, [nautilus_extension_current]:[nautilus_extension_revision]:`expr [nautilus_extension_current] - 1`)

AC_C_BIGENDIAN
AC_C_CONST
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

PKG_CHECK_MODULES(ALL, [
	glib-2.0		>= glib_minver
	gnome-desktop-2.0	>= gnome_desktop_minver
	gthread-2.0
	gio-unix-2.0		
	gio-2.0		
	pango			>= pango_minver
	gtk+-2.0		>= gtk_minver
	libxml-2.0		>= xml_minver
	gail			>= gail_minver
	gtkglext-1.0
	gdkglext-1.0
	cairo
	pangocairo
	unique-1.0
	dbus-glib-1
	freeglut3
])
dnl ==========================================================================

GETTEXT_PACKAGE=nautilus
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",
                   [the gettext translation domain])

AM_GLIB_GNU_GETTEXT
GLIB_DEFINE_LOCALEDIR(GNOMELOCALEDIR)

IT_PROG_INTLTOOL([0.40.1])

dnl ==========================================================================

GTK_DOC_CHECK([1.4])

dnl ==========================================================================

DISABLE_OGL_ANTIALIAS=
AC_ARG_ENABLE(antialiasing,
 AC_HELP_STRING([--disable-antialiasing], [Disable antialiasing in Effects View]),
 [DISABLE_OGL_ANTIALIAS=1
  AC_DEFINE(DISABLE_OGL_ANTIALIAS, 1, [define to disable antialiasing in Effects View])])

antialiasing_support=on
if test "x$DISABLE_OGL_ANTIALIAS" = "x1"
then
	CFLAGS="-DFM_OGL_VIEW_DISABLE_ANTIALIAS $CFLAGS"
	antialiasing_support=off
fi

AC_SUBST(DISABLE_OGL_ANTIALIAS)
AM_CONDITIONAL(DISABLE_OGL_ANTIALIAS, test "x$DISABLE_OGL_ANTIALIAS" = "x1")


dnl ==========================================================================

ENABLE_PROFILER=
AC_ARG_ENABLE(profiler,
 AC_HELP_STRING([--enable-profiler], [Enable profiler]),
 [ENABLE_PROFILER=1
  AC_DEFINE(ENABLE_PROFILER, 1, [define to enable the profiler])])

profiling_support=off
if test "x$ENABLE_PROFILER" = "x1"
then
	CFLAGS="-g -O -gdwarf-2 -finstrument-functions -D__NO_STRING_INLINES $CFLAGS"
	LDFLAGS="/gnome/GNOME2/lib/libprofiler.so -lpthread $LDFLAGS"
	profiling_support=on
fi

AC_SUBST(ENABLE_PROFILER)
AM_CONDITIONAL(ENABLE_PROFILER, test "x$ENABLE_PROFILER" = "x1")

dnl ==========================================================================

AC_CHECK_PROGS(PERL, perl5 perl)
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

dnl ==========================================================================

AC_CHECK_HEADERS(sys/mount.h sys/vfs.h sys/param.h malloc.h)
			      
dnl ==========================================================================

AC_CHECK_FUNCS(statfs statvfs mallopt)
AC_CHECK_HEADERS(sys/statfs.h sys/statvfs.h)

dnl
dnl if statfs() takes 2 arguments or 4 (Solaris)
dnl
if test "$ac_cv_func_statfs" = yes ; then
  AC_MSG_CHECKING([number of arguments to statfs()])
  AC_TRY_COMPILE([#include <unistd.h>
  #ifdef HAVE_SYS_PARAM_H
  #include <sys/param.h>
  #endif
  #ifdef HAVE_SYS_VFS_H
  #include <sys/vfs.h>
  #endif
  #ifdef HAVE_SYS_MOUNT_H
  #include <sys/mount.h>
  #endif
  #ifdef HAVE_SYS_STATFS_H
  #include <sys/statfs.h>
  #endif], [struct statfs st;
  statfs(NULL, &st);],[
    AC_MSG_RESULT([2])
    AC_DEFINE(STATFS_ARGS, 2, [Number of arguments to statfs()])],[
    AC_TRY_COMPILE([#include <unistd.h>
  #ifdef HAVE_SYS_PARAM_H
  #include <sys/param.h>
  #endif
  #ifdef HAVE_SYS_VFS_H
  #include <sys/vfs.h>
  #endif
  #ifdef HAVE_SYS_MOUNT_H
  #include <sys/mount.h>
  #endif
  #ifdef HAVE_SYS_STATFS_H
  #include <sys/statfs.h>
  #endif], [struct statfs st;
  statfs(NULL, &st, sizeof (st), 0);],[
      AC_MSG_RESULT([4])
      AC_DEFINE(STATFS_ARGS, 4, [Number of arguments to statfs()])],[
      AC_MSG_RESULT(unknown)
      AC_MSG_ERROR([unable to determine number of arguments to statfs()])])])
fi dnl test "$ac_cv_func_statfs" = yes

dnl ==========================================================================

dnl X

x_libs="`$PKG_CONFIG --libs pangox`"
case x_libs in
  *-lX11*) pango_omitted_x_deps=no ;;
  *)       pango_omitted_x_deps=yes ;;
esac

x_cflags="`$PKG_CONFIG --cflags pangox`"
x_extra_libs=

if test $pango_omitted_x_deps = yes ; then
  AC_PATH_XTRA
 
  if test x$no_x = xyes ; then
    AC_MSG_ERROR([X development libraries not found])
  fi

  x_libs="$X_LIBS -lX11 $X_EXTRA_LIBS"
fi  

## Strip the .la files
 
x_libs_for_checks=$x_libs
#for I in $x_libs ; do
#  case $I in 
#    *.la) ;;
#    *) x_libs_for_checks="$x_libs_for_checks $I" ;;
#  esac
#done

AC_CHECK_LIB(X11, XOpenDisplay, :, 
	AC_MSG_ERROR([*** libX11 not found.  Check 'config.log' for more details.]),
	$x_libs_for_checks) 

dnl ==========================================================================

AM_CONDITIONAL(HAVE_EXIF, false)

dnl libexif checking

PKG_CHECK_MODULES(EXIF, libexif > exif_minver, [
		  AM_CONDITIONAL(HAVE_EXIF, true)
		  AC_DEFINE(HAVE_EXIF, 1, [Define to enable EXIF support])
		  ], [
		  PKG_CHECK_MODULES(EXIF, libexif = exif_minver, [
				    AM_CONDITIONAL(HAVE_EXIF, true)
				    AC_DEFINE(HAVE_OLD_EXIF, 1, [Define if your EXIF library has old API])
				    ], [AM_CONDITIONAL(HAVE_EXIF, false)])
		  ])

AC_SUBST(EXIF_CFLAGS)
AC_SUBST(EXIF_LIBS)

dnl ==========================================================================

dnl exempi checking

AM_CONDITIONAL(HAVE_EXEMPI, false)

AC_ARG_ENABLE(xmp, 
	AC_HELP_STRING([--disable-xmp], 
			[build without xmp support]))
msg_xmp=no
if test "x$enable_xmp" != "xno"; then
	PKG_CHECK_MODULES(EXEMPI, exempi-2.0 >= exempi_minver, [
		  	  AM_CONDITIONAL(HAVE_EXEMPI, true)
			  AC_DEFINE(HAVE_EXEMPI, 1, [Define to enable xmp support])
			  ]
                          msg_xmp=yes,
	          	  [AM_CONDITIONAL(HAVE_EXEMPI, false)])

	PKG_CHECK_MODULES(EXEMPI_NEW_API, exempi-2.0 >= exempi_minver_newapi,
		  AC_DEFINE(HAVE_EXEMPI_NEW_API, 1, [Define if we have exempi with the new API]), true)

	AC_SUBST(EXEMPI_CFLAGS)
	AC_SUBST(EXEMPI_LIBS)
fi

dnl ==========================================================================
dnl search implementations
dnl ****************************

AM_CONDITIONAL(HAVE_TRACKER, false)

dnl libtracker checking
			    			  
AC_ARG_ENABLE(tracker, 
	AC_HELP_STRING([--disable-tracker], 
			[build without tracker support]))
msg_tracker=no
if test "x$enable_tracker" != "xno"; then
	PKG_CHECK_MODULES(TRACKER, tracker >= tracker_minver, [
		  	  AM_CONDITIONAL(HAVE_TRACKER, true)
			  AC_DEFINE(HAVE_TRACKER, 1, [Define to enable tracker support])
			  ]
                          msg_tracker=yes,
	          	  [AM_CONDITIONAL(HAVE_TRACKER, false)])
        AC_SUBST(TRACKER_CFLAGS)
	AC_SUBST(TRACKER_LIBS)
fi

dnl ==========================================================================


AM_CONDITIONAL(HAVE_BEAGLE, false)

dnl libbeagle checking

AC_ARG_ENABLE(beagle, 
	AC_HELP_STRING([--disable-beagle], 
			[build without beagle support]))
msg_beagle=no
if test "x$enable_beagle" != "xno"; then
	BEAGLE_PKGCONFIG=
	if $PKG_CONFIG --exists libbeagle-1.0; then
		BEAGLE_PKGCONFIG=libbeagle-1.0
	else
		BEAGLE_PKGCONFIG=libbeagle-0.0
	fi

	PKG_CHECK_MODULES(BEAGLE, $BEAGLE_PKGCONFIG >= beagle_minver, [
		  	  AM_CONDITIONAL(HAVE_BEAGLE, true)
			  AC_DEFINE(HAVE_BEAGLE, 1, [Define to enable beagle support])
			  ]
                          msg_beagle=yes,
	          	  [AM_CONDITIONAL(HAVE_BEAGLE, false)])
        AC_SUBST(BEAGLE_CFLAGS)
	AC_SUBST(BEAGLE_LIBS)
fi

dnl ==========================================================================

dnl ****************************
dnl *** Check for libselinux ***
dnl ****************************
    
SELINUX_LIBS=
msg_selinux=no
AC_CHECK_LIB(selinux, is_selinux_enabled,
   [AC_CHECK_HEADERS(selinux/selinux.h,
     [AC_SEARCH_LIBS(selinux_raw_to_trans_context, selinux, 
       [AC_DEFINE(HAVE_SELINUX, 1, [Define to 1 if libselinux is available])
        SELINUX_LIBS="-lselinux"
        msg_selinux=yes])
     ])
   ])
AC_SUBST(SELINUX_LIBS)


AC_ARG_ENABLE(empty_view,
 AC_HELP_STRING([--enable-empty-view], [Enable empty view]),
 [ENABLE_EMPTY_VIEW=1
  AC_DEFINE(ENABLE_EMPTY_VIEW, 1, [define to enable the empty view that is used for performance measurement])])

AC_SUBST(ENABLE_EMPTY_VIEW)
AM_CONDITIONAL(ENABLE_EMPTY_VIEW, test "x$ENABLE_EMPTY_VIEW" = "x1")

dnl ==========================================================================

AC_ARG_ENABLE(packagekit, 
	AC_HELP_STRING([--disable-packagekit], 
			[build without PackageKit support]))
msg_packagekit=no
if test "x$enable_packagekit" != "xno"; then
	msg_packagekit=yes
	AC_DEFINE(ENABLE_PACKAGEKIT, 1, [define to enable PackageKit mimetype installer])
fi

dnl ==========================================================================

dnl Turn on the additional warnings last, so -Werror doesn't affect other tests.

AC_ARG_ENABLE(more-warnings,
AC_HELP_STRING([--enable-more-warnings], [Maximum compiler warnings]),
set_more_warnings="$enableval",[
if test -f $srcdir/CVSVERSION; then
	is_cvs_version=true
	set_more_warnings=yes
else
	set_more_warnings=no
fi
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	AC_MSG_RESULT(yes)
	WARNING_CFLAGS="\
	-Wall \
	-Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wcast-align"

	for option in -Wstrict-aliasing=0 -Wno-pointer-sign; do
		SAVE_CFLAGS="$CFLAGS"
		CFLAGS="$CFLAGS $option"
		AC_MSG_CHECKING([whether gcc understands $option])
		AC_TRY_COMPILE([], [],
			has_option=yes,
			has_option=no,)
		if test $has_option = yes; then
		   	WARNING_CFLAGS="$WARNING_CFLAGS $option"
		fi
		AC_MSG_RESULT($has_option)
		CFLAGS="$SAVE_CFLAGS"
		unset has_option
		unset SAVE_CFLAGS
	done
	unset option
else
	AC_MSG_RESULT(no)
fi

dnl ===========================================================================

dnl strftime checks

AC_TRY_RUN([#include <time.h>
                int main ()
                {
                  char buf[100];
                  struct tm tm = {0};
                  tm.tm_year = 99;
                  if (strftime(buf, 100, "%EY", &tm) == 4 &&
		      strcmp (buf, "1999")==0)
                    return 0;
                  return 1;
                }
            ],
	    AC_DEFINE(HAVE_STRFTIME_EXTENSION, 1, [Define if strftime supports %E and %O modifiers.])
            )

dnl ===========================================================================

#
# Checks for Xft/XRender
#
have_render=false
RENDER_LIBS=""

AC_CHECK_LIB(Xrender, XRenderFindFormat, 
    have_render=true,:,-lXext)

if $have_render ; then
   RENDER_LIBS="-lXrender -lXext"
   AC_DEFINE(HAVE_RENDER)
fi

AC_SUBST(RENDER_LIBS)


	    
dnl ==========================================================================
	
dnl libegg
LIBEGG_MODULES="gtk+-2.0"
LIBEGG_CFLAGS="`$PKG_CONFIG --cflags $LIBEGG_MODULES`"
AC_SUBST(LIBEGG_CFLAGS)
LIBEGG_LIBS="`$PKG_CONFIG --libs $LIBEGG_MODULES`"
AC_SUBST(LIBEGG_LIBS)

dnl libnautilus-extension
LIBNAUTILUS_EXTENSION_MODULES="glib-2.0 gtk+-2.0"
LIBNAUTILUS_EXTENSION_CFLAGS="`$PKG_CONFIG --cflags $LIBNAUTILUS_EXTENSION_MODULES` $WARNING_CFLAGS"
AC_SUBST(LIBNAUTILUS_EXTENSION_CFLAGS)
LIBNAUTILUS_EXTENSION_LIBS="`$PKG_CONFIG --libs $LIBNAUTILUS_EXTENSION_MODULES`"
AC_SUBST(LIBNAUTILUS_EXTENSION_LIBS)

dnl core nautilus
CORE_MODULES="freeglut3 glib-2.0 gtkglext-1.0 gdkglext-1.0 glib-2.0 gnome-desktop-2.0 gthread-2.0 gio-2.0 gio-unix-2.0 unique-1.0 dbus-glib-1 gail gconf-2.0 libxml-2.0 $EXTRA_CORE_MODULES"
CORE_CFLAGS="`$PKG_CONFIG --cflags $CORE_MODULES` $x_cflags $WARNING_CFLAGS"
AC_SUBST(CORE_CFLAGS)
CORE_LIBS="`$PKG_CONFIG --libs $CORE_MODULES` $x_libs"
AC_SUBST(CORE_LIBS)

DISABLE_DEPRECATED_CFLAGS="-DG_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED"
AC_SUBST(DISABLE_DEPRECATED_CFLAGS)

dnl Multimedia keys
AC_CHECK_HEADERS([X11/XF86keysym.h])

dnl ==============================================
dnl Special GConf section 
dnl ==============================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

dnl ==========================================================================

AC_PATH_PROG(UPDATE_MIME_DATABASE, update-mime-database, no)

AC_ARG_ENABLE(update-mimedb,
   AC_HELP_STRING([--disable-update-mimedb],
                   [disable the update-mime-database after install [default=no]]),,
    enable_update_mimedb=yes)
AM_CONDITIONAL(ENABLE_UPDATE_MIMEDB, test x$enable_update_mimedb = xyes)

SHAVE_INIT([m4], [enable])
	
AC_CONFIG_FILES([
Makefile
cut-n-paste-code/Makefile
cut-n-paste-code/libegg/Makefile
data/Makefile
data/icons/Makefile
data/patterns/Makefile
data/nautilus-computer.desktop.in
data/nautilus-file-management-properties.desktop.in
data/nautilus-home.desktop.in
data/nautilus.desktop.in
data/nautilus-folder-handler.desktop.in
data/nautilus-browser.desktop.in
data/nautilus-autorun-software.desktop.in
docs/Makefile
docs/reference/Makefile
docs/reference/libnautilus-extension/Makefile
docs/reference/libnautilus-extension/version.xml
eel/Makefile
icons/Makefile
libnautilus-private/Makefile
libnautilus-extension/Makefile
libnautilus-extension/libnautilus-extension.pc
libnautilus-extension/libnautilus-extension-uninstalled.pc
m4/Makefile
m4/shave-libtool
m4/shave
po/Makefile.in
src/Makefile
src/file-manager/Makefile
test/Makefile
])

AC_OUTPUT

dnl ==========================================================================
echo "
nautilus-$VERSION:

	prefix:                 ${prefix}
	source code location:	${srcdir}
	compiler:		${CC}
	tracker support:	$msg_tracker
	beagle support:		$msg_beagle
	xmp support:		$msg_xmp
	PackageKit support:     $msg_packagekit

	profiling support:      ${profiling_support}
	nautilus-extension documentation: ${enable_gtk_doc}
"
